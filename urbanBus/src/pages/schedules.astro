---
import LayoutMobile from '../layouts/LayoutMobile.astro';

const lines = [
    {name: 'L1', color: "bg-[#00b8a1]/70", id: 1},
    {name: 'L2', color: 'bg-rose-500/50', id: 2},
    {name: 'L3', color: 'bg-amber-500/50', id: 3},
    {name: 'L4', color: 'bg-lime-500/50', id: 4},
    {name: 'L5', color: 'bg-emerald-500/50', id: 5},
    {name: 'L6', color: 'bg-cyan-500/50', id: 6},
    {name: 'L7', color: 'bg-violet-500/50', id: 7},
    {name: 'L8', color: 'bg-fuchsia-500/50', id: 8},
    {name: 'L9', color: 'bg-rose-500/50', id: 9},
    {name: 'L10', color: 'bg-amber-500/50', id: 10},
    {name: 'L11', color: 'bg-lime-500/50', id: 11},
    {name: 'AZUL', color: 'bg-blue-500/50', id: 12},
    {name: 'VERDE', color: 'bg-green-500/50', id: 13},
]

const stops = [
	{name: 'Plaza de la Revoluci√≥n', id: 1},
	{name: 'Calle 23', id: 2},
	{name: 'Calle 26', id: 3},
	{name: 'Calle 100', id: 4},
	{name: 'Calle 142', id: 5},
	{name: 'Calle 170', id: 6},
	{name: 'Calle 190', id: 7},
	{name: 'Calle 200', id: 8},
	{name: 'Calle 222', id: 9},
	{name: 'Calle 250', id: 10},
	{name: 'Calle 272', id: 11},
	{name: 'Calle 300', id: 12},
	{name: 'Calle 330', id: 13},
	{name: 'Calle 350', id: 14},
	{name: 'Calle 400', id: 15},
]

---

<LayoutMobile title="urbanBus">
	<div class="flex flex-col h-full">
		<div id="menu1" class="flex-1 overflow-auto">
			<div class="flex flex-col gap-6">
				<label id="startStop" class="input input-bordered flex items-center gap-2">
					<input type="text" class="grow" placeholder="Search for a stop" />
					<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" fill="currentColor" class="w-4 h-4 opacity-70"><path fill-rule="evenodd" d="M9.965 11.026a5 5 0 1 1 1.06-1.06l2.755 2.754a.75.75 0 1 1-1.06 1.06l-2.755-2.754ZM10.5 7a3.5 3.5 0 1 1-7 0 3.5 3.5 0 0 1 7 0Z" clip-rule="evenodd" /></svg>
				</label>

				<label id="lastStop" class="input input-bordered flex items-center gap-2">
					<input type="text" class="grow" placeholder="Search your destiny" />
					<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" fill="currentColor" class="w-4 h-4 opacity-70"><path fill-rule="evenodd" d="M9.965 11.026a5 5 0 1 1 1.06-1.06l2.755 2.754a.75.75 0 1 1-1.06 1.06l-2.755-2.754ZM10.5 7a3.5 3.5 0 1 1-7 0 3.5 3.5 0 0 1 7 0Z" clip-rule="evenodd" /></svg>
				</label>
			</div>
		</div>
		<div class="divider mb-0 vertical-center">OR</div>
		<div id="menu2" class="flex-1 overflow-auto">
			<div class="flex flex-col border-opacity-50  mx-4 my-4">
				<div class="flex justify-center text-sm font-light mb-2">choose a line</div>
				<div class="flex flex-wrap justify-center gap-3">
					{(lines).map((line) => (
						<button class={"btn btn-circle w-12 h-12 " + line.color}>{line.name}</button>
					))}
				</div>
			</div>
		</div>
	</div>
	<style>
		#menu1 {
		    transition: flex-grow 0.5s ease;
		}
		.divider {
			transition: margin 0.5s ease;
		}
	</style>
	<script>
		const menu1 = document.getElementById('menu1');
		const menu2 = document.getElementById('menu2');
		const separator = document.querySelector('.divider');
		const startStop = document.getElementById('startStop');
		const lastStop = document.getElementById('lastStop');

		let animationTimers = [];

		const stopTimers = () => {
			animationTimers.forEach(timer => {
				if (timer)
					clearTimeout(timer)
			});
			animationTimers = [];
		}

		const hideMenu2Transition = () => {
			stopTimers();
			// Animation to hide the menu2 by changing the height
			animationTimers.push(setTimeout(() => {
				menu1.style.flexGrow = 10;
			}, 120));
			separator.style.marginLeft = '8rem';
			separator.style.marginRight = '8rem';
			// set timer to display none the menu2
			animationTimers.push(setTimeout(() => {
				menu2.style.display = 'none';
				separator.style.display = 'none';
			}, 500));
		}

		const showMenu2Transition = () => {
			stopTimers();
			menu2.style.display = 'flex';
			separator.style.display = 'flex';
			menu1.style.flexGrow = 1;
			animationTimers(setTimeout(() => {
				separator.style.marginLeft = '1rem';
				separator.style.marginRight = '1rem';
			}, 300));
		}

		startStop.querySelector('input').addEventListener('focus', () => {
			hideMenu2Transition();

		})
		startStop.querySelector('input').addEventListener('blur', () => {
			showMenu2Transition();
		})

		lastStop.querySelector('input').addEventListener('focus', () => {
			startStop.style.display = 'none';
		})
		lastStop.querySelector('input').addEventListener('blur', () => {
			startStop.style.display = 'flex';
		})

	</script>
</LayoutMobile>

